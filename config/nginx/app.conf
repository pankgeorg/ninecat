# auto detects a good number of processes to run
# worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
#events {
# Sets the maximum number of simultaneous connections that can be opened by a worker process.
#    worker_connections 8000;
# Tells the worker to accept multiple connections at a time
#    multi_accept on;
#}


# http {
# what times to include
#    include       /etc/nginx/mime.types;
# what is the default one
#    default_type  application/octet-stream;
#
#Sets the path, format, and configuration for a buffered log write
#       log_format compression '$remote_addr - $remote_user [$time_local] '
#       	'"$request" $status $upstream_addr '
#       	'"$http_referer" "$http_user_agent"';

    server {
        listen 80;
        server_name websitepankgeorg.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }

    }
    server {
        listen 80;
        server_name www.pankgeorg.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://pankgeorg.com$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name pankgeorg.com;

# where the root here
        root /var/www;
# what file to server as index
        index index.html index.htm;
        ssl_certificate /etc/letsencrypt/live/pankgeorg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pankgeorg.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
# First attempt to serve request as file, then
# as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

# Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
        }

# Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

# Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }

    server {
        listen 80;
        server_name api.pankgeorg.com;

	location /station-readings {
            proxy_pass  http://uvicorn;
	}
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }

    }


    server {
        listen 443 ssl;
        server_name api.pankgeorg.com;

        ssl_certificate /etc/letsencrypt/live/pankgeorg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pankgeorg.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            resolver 127.0.0.11 ipv6=off;

            if ( $http_origin ~ '^https://(www.pankgeorg.com|pankgeorg.com|silentech.gr)$' ) {
                add_header "Access-Control-Allow-Origin" "$http_origin" "always";
        }
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass  http://uvicorn;
        }
    }

    upstream uvicorn {
        server ninecat fail_timeout=0;
# server localhost fail_timeout=0;
    }

    server {
        listen 80;
        server_name postgres.pankgeorg.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }

    }


    server {
        listen 443 ssl;
        server_name postgres.pankgeorg.com;

        ssl_certificate /etc/letsencrypt/live/pankgeorg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pankgeorg.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            resolver 127.0.0.11 ipv6=off;

            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass  http://pgadmin;
        }
    }

    upstream pgadmin {
        server pgadmin4 fail_timeout=0;
#server localhost fail_timeout=0;
    }

    server {
        listen 80;
        server_name metabase.pankgeorg.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }

    }


    server {
        listen 443 ssl;
        server_name metabase.pankgeorg.com;

        ssl_certificate /etc/letsencrypt/live/pankgeorg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pankgeorg.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            resolver 127.0.0.11 ipv6=off;

            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass  http://metabase;
        }
    }

    upstream metabase {
        server metabase:3000 fail_timeout=0;
#server localhost fail_timeout=0;
    }

    server {
        listen 80;
        server_name hasura.pankgeorg.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }

    }


    server {
        listen 443 ssl;
        server_name hasura.pankgeorg.com;

        ssl_certificate /etc/letsencrypt/live/pankgeorg.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pankgeorg.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            resolver 127.0.0.11 ipv6=off;

            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass  http://hasura;
        }
    }

    upstream hasura {
        server hasura:8080 fail_timeout=0;
#server localhost fail_timeout=0;
    }
