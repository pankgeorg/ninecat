## auto detects a good number of processes to run
# worker_processes auto;
#
##Provides the configuration file context in which the directives that affect connection processing are specified.
#events {
## Sets the maximum number of simultaneous connections that can be opened by a worker process.
#    worker_connections 8000;
## Tells the worker to accept multiple connections at a time
#    multi_accept on;
#}
#
#
# http {
# what times to include
#    include       /etc/nginx/mime.types;
# what is the default one
#    default_type  application/octet-stream;

#Sets the path, format, and configuration for a buffered log write
	log_format compression '$remote_addr - $remote_user [$time_local] '
		'"$request" $status $upstream_addr '
		'"$http_referer" "$http_user_agent"';

	server {
		listen 80;
		server_name silentech.gr;
		server_tokens off;

		location /.well-known/acme-challenge/ {
			root /var/www/certbot;
		}

		location / {
			return 301 https://$host$request_uri;
		}

	}
	server {
# listen on port 80
		listen 443 ssl;
		server_name silentech.gr;
# save logs here

# where the root here
		root /var/www;
# what file to server as index
		index index.html index.htm;
		ssl_certificate /etc/letsencrypt/live/example.org/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/example.org/privkey.pem;
		include /etc/letsencrypt/options-ssl-nginx.conf;
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

		location / {
			add_header Last-Modified $date_gmt;
			add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
			if_modified_since off;
			expires off;
			etag off;
# First attempt to serve request as file, then
# as directory, then fall back to redirecting to index.html
			try_files $uri $uri/ /index.html;
		}

# Media: images, icons, video, audio, HTC
		location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
			expires 1M;
			access_log off;
			add_header Cache-Control "public";
		}

# Javascript and CSS files
		location ~* \.(?:css|js)$ {
			try_files $uri =404;
			expires 1y;
			access_log off;
			add_header Cache-Control "public";
		}

# Any route containing a file extension (e.g. /devicesfile.js)
		location ~ ^.+\..+$ {
			try_files $uri =404;
		}
	}

	server {
		listen 80;
		server_name api.silentech.gr;
		server_tokens off;

		location /.well-known/acme-challenge/ {
			root /var/www/certbot;
		}

		location / {
			return 301 https://$host$request_uri;
		}

	}


	server {
		listen 443 ssl;
		server_name api.silentech.gr;
		server_tokens off;

		ssl_certificate /etc/letsencrypt/live/example.org/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/example.org/privkey.pem;
		include /etc/letsencrypt/options-ssl-nginx.conf;
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
		location / {
			proxy_set_header    Host                $http_host;
			proxy_set_header    X-Real-IP           $remote_addr;
			proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
			proxy_set_header    X-Forwarded-Proto   $scheme;
			proxy_redirect off;
			proxy_buffering off;
			proxy_pass  http://uvicorn;
		}
	}

	upstream uvicorn {
		server ninecat fail_timeout=0;
	}
#}
